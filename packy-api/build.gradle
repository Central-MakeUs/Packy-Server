plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.dilly'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // multi module
    implementation project(':packy-domain')

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // orm
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // webflux (for WebClient)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // json parser
    implementation 'com.google.code.gson:gson:2.8.9'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
}

test {
    useJUnitPlatform()
}

processResources.dependsOn('copySecret')
tasks.register('copySecret', Copy) {
    from '../packy-submodule/api'
    include '*'
    into './src/main/resources'
}

if (project.hasProperty('dev')) {
    apply from: project.file('profile-dev.gradle');
} else if (project.hasProperty('prod')) {
    apply from: project.file('profile-prod.gradle');
}

bootJar.enabled = true
jar.enabled = false
